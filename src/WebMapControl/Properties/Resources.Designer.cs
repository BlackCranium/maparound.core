//  MapAround - .NET tools for developing web and desktop mapping applications 

//  Copyright (coffee) 2009-2012 OOO "GKR"
//  This program is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU General Public License 
//   as published by the Free Software Foundation; either version 3 
//  of the License, or (at your option) any later version. 
// 
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
// 
//  You should have received a copy of the GNU General Public License
//  along with this program; If not, see <http://www.gnu.org/licenses/>



ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MapControl.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MapControl.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright 2006 Google Inc.
        /////
        ///// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
        ///// you may not use this file except in compliance with the License.
        ///// You may obtain a copy of the License at
        /////
        /////   http://www.apache.org/licenses/LICENSE-2.0
        /////
        ///// Unless required by applicable law or agreed to in writing, software
        ///// distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
        ///// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        ///// See the License f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string excanvas {
            get {
                return ResourceManager.GetString("excanvas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GetElemTopLeft(elem) 
        ///{
        ///    var top = 0, left = 0
        ///    if (elem.getBoundingClientRect) {
        ///
        ///        var box = elem.getBoundingClientRect()
        ///
        ///        var body = document.body
        ///        var docElem = document.documentElement
        ///
        ///        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop
        ///        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft
        ///
        ///        var clientTop = docElem.clientTop || body.clientTop || 0
        ///        var clientLeft = docElem.clien [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string maptools {
            get {
                return ResourceManager.GetString("maptools", resourceCulture);
            }
        }
    }
}
